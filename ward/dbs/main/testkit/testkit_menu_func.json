{
  "uri": "xo.1591340569834601786",
  "aux": "testkit",
  "kind": "js",
  "name": "testkit menu applet",
  "media": "\n        lain.rom.testkit_menu = (() => {\n            // Blinkenlights\n            let console_count = [];\n            let isBlinkerRunning = false;\n            const blinker = document.getElementById('testkit_blinker');\n            //protect menu from idiots\n            const testkitMenuDiv = document.getElementById('testkit_menu');\n            if (testkitMenuDiv && testkitMenuDiv.parentElement && testkitMenuDiv.parentElement.parentElement && testkitMenuDiv.parentElement.parentElement.parentElement) {\n                const parentParentParent = testkitMenuDiv.parentElement.parentElement.parentElement;\n                const buttonsToRemove = parentParentParent.querySelectorAll('button[onclick=\"alice().rom.hideDraggable(this);\"]');\n                buttonsToRemove.forEach(button => {\n                    button.remove();\n                });\n            }\n            const flickerBlinker = () => {\n                if (console_count.length > 0) {\n                    isBlinkerRunning = true;\n                    const { color } = console_count.shift();\n                    blinker.style.color = color;\n                    blinker.innerHTML = '';\n                    setTimeout(() => {\n                        blinker.innerHTML = '●';\n                        if (console_count.length > 0) {\n                            setTimeout(flickerBlinker, 30);\n                        } else {\n                            isBlinkerRunning = false;\n                            blinker.style.color = 'grey';\n                        }\n                    }, 60);\n                }\n            };\n\n            document.addEventListener('consolelogged', (event) => {\n                if (console_count.length > 0 && !isBlinkerRunning) {\n                    flickerBlinker();\n                }\n            });\n\n            const originalLog = console.log;\n            console.log = function(...args) {\n                console_count.push({ color: 'lime' });\n                originalLog.apply(console, args);\n                document.dispatchEvent(new CustomEvent('consolelogged', { detail: { error: false } }));\n            };\n\n            const originalError = console.error;\n            console.error = function(...args) {\n                console_count.push({ color: 'red' });\n                originalError.apply(console, args);\n                document.dispatchEvent(new CustomEvent('consolelogged', { detail: { error: true } }));\n            };\n\n            console.log('Hello, world!');\n\n            const updateHiddenList = () => {\n                const hiddenListSpan = document.getElementById('testkit_hiddenlist');\n                hiddenListSpan.innerHTML = ''; // Clear existing content\n\n                const hiddenItems = lain.cache.filter(item => item.hidden);\n\n                if (hiddenItems.length > 0) {\n                    const select = document.createElement('select');\n                    select.id = 'hiddenItemsSelect';\n                    select.style.maxWidth = '64px';\n\n                    hiddenItems.forEach((item) => {\n                        const index = lain.cache.indexOf(item);\n                        const option = document.createElement('option');\n                        option.value = index;\n                        option.text = item.name;\n                        select.appendChild(option);\n                    });\n\n                    const hr = document.createElement('hr');\n                    hiddenListSpan.appendChild(hr);\n                    hiddenListSpan.appendChild(select);\n                    const br = document.createElement('br');\n                    hiddenListSpan.appendChild(br);\n                    const unhideButton = document.createElement('button');\n                    unhideButton.textContent = 'expand';\n                    unhideButton.addEventListener('click', () => {\n                        const selectedIndex = select.value;\n                        if (selectedIndex !== '') {\n                            const cacheItem = lain.cache[selectedIndex];\n                            delete cacheItem.hidden;\n        \n                            const element = document.querySelector('[data-set=\"' + cacheItem.domset + '\"]');\n                            if (element) {\n                                element.style.display = '';\n                                element.style.pointerEvents = '';\n                            }\n                            else {\n                                console.log('cant find element')\n                            }\n                            updateHiddenList(); // Refresh the hidden list\n                        }\n                    });\n\n                    hiddenListSpan.appendChild(unhideButton);\n\n                }\n            };\n                        setTimeout(() => {\n                updateHiddenList();\n            }, 500);\n            // channel surfing\n            currentChannel.innerText = alice().chan;\n            \n            document.getElementById('setchannel_form').addEventListener('submit', function(event) {\n                event.preventDefault();\n                let channelValue = setchannel.value.toLowerCase();\n                if (channelValue.startsWith('/')) {\n                    channelValue = channelValue.substring(1);\n                }\n                if (channelValue.endsWith('/')) {\n                    channelValue = channelValue.slice(0, -1);\n                }\n                alice().chan = \"/\" + channelValue + \"/\";\n                if (alice().chan == \"/\" + channelValue + \"/\"){\n                    window.location.href = window.location.origin;\n                }\n            });\n            // Testkit Apps\n            document.getElementById('testkit_menuStart').addEventListener('click', function() {\n                navi(alice, 'lain.rom.enclose_draggable(alice().dvr.' + testkit_menuSelect.value + ')', 'document.body');\n            });\n            document.getElementById('testkit_menuSave').addEventListener('click', function() {\n                lain.rom.testkit_corner();\n            });\n            document.getElementById('testkit_menuClear').addEventListener('click', function() {\n                if (confirm(\"clearing navi to default!!\")){\n                    if ('serviceWorker' in navigator) {\n                        // Get all service worker registrations\n                        navigator.serviceWorker.getRegistrations().then(function(registrations) {\n                            for (let registration of registrations) {\n                                // Unregister each service worker\n                                registration.unregister().then(function(success) {\n                                    if (success) {\n                                        console.log('Service worker unregistered successfully.');\n                                    } else {\n                                        console.log('Service worker unregistration failed.');\n                                    }\n                                });\n                            }\n                        }).catch(function(error) {\n                            console.error('Error getting service worker registrations:', error);\n                        });\n                    } else {\n                        console.log('Service workers are not supported in this browser.');\n                    }\n                    \n                    const request = indexedDB.open('realworld', 2);\n                    request.onsuccess = function(event) {\n                        const db = event.target.result;\n                        const transaction = db.transaction(['upperlayer'], 'readwrite');\n                        const upperlayer = transaction.objectStore('upperlayer');\n                        const deleteRequest = upperlayer.delete('1');\n                        deleteRequest.onsuccess = function() {\n                            for (let i = lain.cache.length - 1; i >= 0; i--) {\n                                const cacheItem = lain.cache[i];\n                                if (cacheItem && cacheItem.uri === \"xo.15901360516061\") {\n                                    continue; // Skip this iteration\n                                }\n                                lain.rom.removeCacheItem({index: i});\n                            }\n                            location.reload();\n                            navi(alice, 'alice().dvr.demo_proc')\n                        };\n                        deleteRequest.onerror = function() {\n                            console.error(\"Error deleting datastore\");\n                        };\n                    };\n                }\n            });\n            updateHiddenList();\n            return {\n                updateHiddenList\n            };\n        })();\n        "
}